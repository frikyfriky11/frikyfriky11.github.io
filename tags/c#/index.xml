<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C# on frikyfriky11</title><link>https://frikyfriky11.github.io/tags/c#/</link><description>Recent content in C# on frikyfriky11</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 04 Jun 2023 22:46:38 +0200</lastBuildDate><atom:link href="https://frikyfriky11.github.io/tags/c#/index.xml" rel="self" type="application/rss+xml"/><item><title>AutoMapper between classes and records</title><link>https://frikyfriky11.github.io/posts/automapper-between-classes-and-records/</link><pubDate>Sun, 04 Jun 2023 22:46:38 +0200</pubDate><guid>https://frikyfriky11.github.io/posts/automapper-between-classes-and-records/</guid><description>Mapping objects between different classes or data structures is a common task in software development. It allows us to transform data from one representation to another. AutoMapper is a powerful library that simplifies this process by automatically mapping properties based on naming conventions. However, when working with records, there are some specific considerations to keep in mind to ensure seamless mapping. In this blog post, I will share an issue I encountered while using AutoMapper v12.</description></item><item><title>What is lowering and why should you care</title><link>https://frikyfriky11.github.io/posts/what-is-lowering-why-should-you-care/</link><pubDate>Wed, 14 Sep 2022 06:57:07 +0200</pubDate><guid>https://frikyfriky11.github.io/posts/what-is-lowering-why-should-you-care/</guid><description>Nowadays we&amp;rsquo;re all writing highly understandable code (or at least that&amp;rsquo;s what I&amp;rsquo;m telling my coworkers!) in high level languages, almost completely forgetting what those pieces of code are translated to once they are compiled or interpreted.
Back in the day, people used to punch holes into cards to represent bits as instructions for the CPU, then they invented low level languages, then high level languages, and now we even have high level languages that transpile to other high level languages instead of compiling them (think of TypeScript to JavaScript for example).</description></item></channel></rss>