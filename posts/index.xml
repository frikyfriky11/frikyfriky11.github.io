<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on frikyfriky11</title><link>https://frikyfriky11.github.io/posts/</link><description>Recent content in Posts on frikyfriky11</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 22 Aug 2025 06:47:17 +0200</lastBuildDate><atom:link href="https://frikyfriky11.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>From Specialist to Swiss Army Knife: The Value of Flexible Developers</title><link>https://frikyfriky11.github.io/posts/from-specialist-to-swiss-army-knife-the-value-of-flexible-developers/</link><pubDate>Fri, 22 Aug 2025 06:47:17 +0200</pubDate><guid>https://frikyfriky11.github.io/posts/from-specialist-to-swiss-army-knife-the-value-of-flexible-developers/</guid><description>&lt;p>Being a specialist is a fantastic thing. In the world of software development, where roles like frontend, backend, or DevOps are well-defined, becoming an expert in one area brings immense value to a company. You&amp;rsquo;re the go-to person, the master of your craft, and your deep knowledge allows you to build incredibly robust and efficient solutions.&lt;/p>
&lt;p>However, the reality for many of us, myself included, is that being a specialist isn&amp;rsquo;t always enough. I&amp;rsquo;ve often found myself in situations where a small task falls outside my usual scopeâ€”maybe a quick change on the frontend for a backend developer, or a database tweak for a frontend expert. In these moments, I believe a developer shouldn&amp;rsquo;t just say, &amp;ldquo;That&amp;rsquo;s not my job.&amp;rdquo; Instead, with some curiosity and a bit of good old-fashioned Googling, we should be able to tackle the problem and get the job done.&lt;/p></description></item><item><title>Typed injectable API clients with RestSharp</title><link>https://frikyfriky11.github.io/posts/typed-injectable-api-clients-with-restsharp/</link><pubDate>Thu, 11 Jan 2024 12:35:17 +0100</pubDate><guid>https://frikyfriky11.github.io/posts/typed-injectable-api-clients-with-restsharp/</guid><description>&lt;h2 id="preface">
 Preface
 &lt;a class="heading-link" href="#preface">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>In my day-to-day work, I often find myself needing to access external data via an external API.&lt;/p>
&lt;p>If you&amp;rsquo;re using C# and recent versions of .NET (both ASP.NET Core and Worker flavors) and need to do something similar, you may find useful to create a client for the external API and inject it whenever you need it via Dependency Injection.&lt;/p>
&lt;p>Writing everything from scratch can lead to a lot of boilerplate. Luckily, we can use the help of a great library called &lt;a href="https://restsharp.dev/" class="external-link" target="_blank" rel="noopener">RestSharp&lt;/a> (&lt;a href="https://github.com/restsharp/RestSharp" class="external-link" target="_blank" rel="noopener">GitHub&lt;/a>).&lt;/p></description></item><item><title>Importing Fronius inverter data into InfluxDB and Grafana</title><link>https://frikyfriky11.github.io/posts/importing-fronius-inverter-data-into-influxdb-and-grafana/</link><pubDate>Fri, 05 Jan 2024 15:09:34 +0100</pubDate><guid>https://frikyfriky11.github.io/posts/importing-fronius-inverter-data-into-influxdb-and-grafana/</guid><description>&lt;h2 id="preface">
 Preface
 &lt;a class="heading-link" href="#preface">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>My in-laws recently upgraded their home&amp;rsquo;s electrical system, and also installed a new inverter along with some batteries for the solar panels they installed on the roof of their house.&lt;/p>
&lt;p>&lt;img src="https://frikyfriky11.github.io/posts/importing-fronius-inverter-data-into-influxdb-and-grafana/fronius_primo_gen24.png" alt="Fronius Inverter Primo GEN24 6.0">&lt;/p>
&lt;p>What caught my eye was that the inverter came with an app that you could download on your smartphone to have a look at all the current stats of the system, like battery charge, usage and solar production, but it had no historical features (or better, they were not so interesting because didn&amp;rsquo;t allow to analyze data past a certain point in time).&lt;/p></description></item><item><title>About Docker containers, compose projects, anonymous volumes and unrecognized changes</title><link>https://frikyfriky11.github.io/posts/about-docker-containers-compose-projects-anonymous-volumes-unrecognized-changes/</link><pubDate>Tue, 21 Nov 2023 23:22:39 +0100</pubDate><guid>https://frikyfriky11.github.io/posts/about-docker-containers-compose-projects-anonymous-volumes-unrecognized-changes/</guid><description>&lt;p>Today I spent a couple of hours trying to help a Data Engineering coworker find some nasty bug that was in hiding into one of our company workloads that are deployed using Docker.&lt;/p>
&lt;h2 id="tldr">
 TLDR
 &lt;a class="heading-link" href="#tldr">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>A Docker deployment bug caused files not to update despite successful builds. It stemmed from an inherited VOLUME directive creating an anonymous volume, persisting changes. Solution: Add &lt;code>docker compose down -v&lt;/code> in the deployment pipeline before &lt;code>docker compose up&lt;/code>.&lt;/p></description></item><item><title>AutoMapper between classes and records</title><link>https://frikyfriky11.github.io/posts/automapper-between-classes-and-records/</link><pubDate>Sun, 04 Jun 2023 22:46:38 +0200</pubDate><guid>https://frikyfriky11.github.io/posts/automapper-between-classes-and-records/</guid><description>&lt;p>Mapping objects between different classes or data structures is a common task in software development. It allows us to transform data from one representation to another. &lt;a href="https://automapper.org/" class="external-link" target="_blank" rel="noopener">AutoMapper&lt;/a> is a powerful library that simplifies this process by automatically mapping properties based on naming conventions. However, when working with &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/record" class="external-link" target="_blank" rel="noopener">records&lt;/a>, there are some specific considerations to keep in mind to ensure seamless mapping. In this blog post, I will share an issue I encountered while using AutoMapper v12.0.1 to map properties between a class and a record, along with the solution I found to overcome it.&lt;/p></description></item><item><title>Why clear and frequent Git commit messages matter</title><link>https://frikyfriky11.github.io/posts/why-clear-frequent-git-commit-messages-matter/</link><pubDate>Tue, 04 Apr 2023 06:46:32 +0200</pubDate><guid>https://frikyfriky11.github.io/posts/why-clear-frequent-git-commit-messages-matter/</guid><description>&lt;p>Git is one of the most popular and powerful tools for version control and collaboration among developers. It allows you to track changes, revert to previous states, and merge code from different branches. However, to make the most of Git, you need to write &lt;strong>clear&lt;/strong> and &lt;strong>frequent&lt;/strong> commit messages that describe what you have done and why.&lt;/p>
&lt;h2 id="what-is-a-commit-message">
 What is a commit message?
 &lt;a class="heading-link" href="#what-is-a-commit-message">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>A commit message is a text that accompanies each commit you make in Git. It has two parts: a &lt;strong>title&lt;/strong> and an &lt;strong>optional body&lt;/strong>. The title is a short summary of the changes you have made, usually no more than 50 characters. The body is a more detailed explanation of the changes, the motivation behind them, and any links to external references.&lt;/p></description></item><item><title>Backtick and tilde on an Italian keyboard</title><link>https://frikyfriky11.github.io/posts/backtick-tilde-on-italian-keyboards/</link><pubDate>Wed, 22 Mar 2023 21:21:02 +0100</pubDate><guid>https://frikyfriky11.github.io/posts/backtick-tilde-on-italian-keyboards/</guid><description>&lt;p>If you&amp;rsquo;re using an Italian keyboard or any keyboard that does not have built-in keys for backtick ` and tilde ~ characters and you do some kind of programming or simply write your notes in Markdown everyday like me, you&amp;rsquo;ll know the struggle of hitting the &lt;code>Alt + 126&lt;/code> ASCII keycode for the tilde and &lt;code>Alt + 96&lt;/code> for the backtick.&lt;/p>
&lt;p>Everything is smooth until you need to write a code block in Markdown that needs 6 (six!) backticks in order to be recognized correctly&amp;hellip; that means hitting &lt;code>Alt + 96&lt;/code> six times, or 12 key strokes in total.&lt;/p></description></item><item><title>What is lowering and why should you care</title><link>https://frikyfriky11.github.io/posts/what-is-lowering-why-should-you-care/</link><pubDate>Wed, 14 Sep 2022 06:57:07 +0200</pubDate><guid>https://frikyfriky11.github.io/posts/what-is-lowering-why-should-you-care/</guid><description>&lt;p>Nowadays we&amp;rsquo;re all writing highly understandable code (&lt;em>or at least that&amp;rsquo;s what I&amp;rsquo;m telling my coworkers!&lt;/em>) in high level languages, almost completely forgetting what those pieces of code are translated to once they are compiled or interpreted.&lt;/p>
&lt;p>Back in the day, people used to punch holes into cards to represent bits as instructions for the CPU, then they invented low level languages, then high level languages, and now we even have high level languages that transpile to other high level languages instead of compiling them (think of TypeScript to JavaScript for example).&lt;/p></description></item><item><title>Setup passwordless access via SSH to a remote server</title><link>https://frikyfriky11.github.io/posts/passwordless-access-ssh/</link><pubDate>Sun, 04 Sep 2022 22:55:00 +0200</pubDate><guid>https://frikyfriky11.github.io/posts/passwordless-access-ssh/</guid><description>&lt;p>Managing remote servers is part of my job as a software engineer, and I usually access them via SSH.&lt;/p>
&lt;p>One thing that is really annoying is typing your password every single time, and for obvious reason setting an empty password is not a workaround :)&lt;/p>
&lt;p>SSH servers usually support key authentication besides password authentication (sometimes it is even the only method of authentication allowed!), and making the server trust your computer is trivially easy to do.&lt;/p></description></item><item><title>Batch rotating multiple mp4 videos (useful for Instagram Reels)</title><link>https://frikyfriky11.github.io/posts/batch-rotating-mp4-videos-for-reels/</link><pubDate>Wed, 31 Aug 2022 21:43:06 +0200</pubDate><guid>https://frikyfriky11.github.io/posts/batch-rotating-mp4-videos-for-reels/</guid><description>&lt;p>Whenever I have some free time (almost never these days, sigh!), you can find me shooting photos around the city. Usually I like to post the best content of a shooting day on Instagram, and while I am mostly focused on photography, I sometimes like to post some videos as Instagram Reels as well.&lt;/p>
&lt;p>Instagram Reels have a 9:16 aspect ratio (1080x1920) while my camera (a Canon EOS R) shoots in 9:16 (1920x1080) and doesn&amp;rsquo;t automatically rotate the videos when I shoot them portrait, unlike the photo mode that does this by default.&lt;/p></description></item><item><title/><link>https://frikyfriky11.github.io/posts/why-bureaucracy-is-good-sometimes-the-case-for-merge-requests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://frikyfriky11.github.io/posts/why-bureaucracy-is-good-sometimes-the-case-for-merge-requests/</guid><description>&lt;pre tabindex="0">&lt;code>+++
date = 2025-08-25T07:10:59+02:00
title = &amp;#34;Why Bureaucracy is Good (Sometimes): The Case for Merge Requests&amp;#34;
description = &amp;#34;A discussion on why the overhead of merge requests, even for small changes, is a small price to pay for the immense benefits of team collaboration, visibility, and code quality.&amp;#34;
authors = [&amp;#34;Stefano Previato&amp;#34;]
tags = [&amp;#34;software development&amp;#34;, &amp;#34;git&amp;#34;, &amp;#34;teamwork&amp;#34;, &amp;#34;collaboration&amp;#34;, &amp;#34;code review&amp;#34;]
categories = [&amp;#34;Career&amp;#34;]
+++
&lt;/code>&lt;/pre>&lt;p>A colleague of mine recently brought up a point I&amp;rsquo;ve heard before, but it still makes me think. &amp;ldquo;Merge requests feel like too much bureaucracy,&amp;rdquo; they said. We were looking at an issue that was just a quick text change on the frontend, and the thought process was, &amp;ldquo;Why do I have to create a new branch, a draft merge request, commit, and then un-draft it just for this tiny thing?&amp;rdquo;&lt;/p></description></item></channel></rss>