<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Stefano Previato on frikyfriky11</title><link>https://frikyfriky11.github.io/authors/stefano-previato/</link><description>Recent content in Stefano Previato on frikyfriky11</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 04 Jun 2023 22:46:38 +0200</lastBuildDate><atom:link href="https://frikyfriky11.github.io/authors/stefano-previato/index.xml" rel="self" type="application/rss+xml"/><item><title>AutoMapper between classes and records</title><link>https://frikyfriky11.github.io/posts/automapper-between-classes-and-records/</link><pubDate>Sun, 04 Jun 2023 22:46:38 +0200</pubDate><guid>https://frikyfriky11.github.io/posts/automapper-between-classes-and-records/</guid><description>Mapping objects between different classes or data structures is a common task in software development. It allows us to transform data from one representation to another. AutoMapper is a powerful library that simplifies this process by automatically mapping properties based on naming conventions. However, when working with records, there are some specific considerations to keep in mind to ensure seamless mapping. In this blog post, I will share an issue I encountered while using AutoMapper v12.</description></item><item><title>Why clear and frequent Git commit messages matter</title><link>https://frikyfriky11.github.io/posts/why-clear-frequent-git-commit-messages-matter/</link><pubDate>Tue, 04 Apr 2023 06:46:32 +0200</pubDate><guid>https://frikyfriky11.github.io/posts/why-clear-frequent-git-commit-messages-matter/</guid><description>Git is one of the most popular and powerful tools for version control and collaboration among developers. It allows you to track changes, revert to previous states, and merge code from different branches. However, to make the most of Git, you need to write clear and frequent commit messages that describe what you have done and why.
What is a commit message? Link to heading A commit message is a text that accompanies each commit you make in Git.</description></item><item><title>Backtick and tilde on an Italian keyboard</title><link>https://frikyfriky11.github.io/posts/backtick-tilde-on-italian-keyboards/</link><pubDate>Wed, 22 Mar 2023 21:21:02 +0100</pubDate><guid>https://frikyfriky11.github.io/posts/backtick-tilde-on-italian-keyboards/</guid><description>If you&amp;rsquo;re using an Italian keyboard or any keyboard that does not have built-in keys for backtick ` and tilde ~ characters and you do some kind of programming or simply write your notes in Markdown everyday like me, you&amp;rsquo;ll know the struggle of hitting the Alt + 126 ASCII keycode for the tilde and Alt + 96 for the backtick.
Everything is smooth until you need to write a code block in Markdown that needs 6 (six!</description></item><item><title>What is lowering and why should you care</title><link>https://frikyfriky11.github.io/posts/what-is-lowering-why-should-you-care/</link><pubDate>Wed, 14 Sep 2022 06:57:07 +0200</pubDate><guid>https://frikyfriky11.github.io/posts/what-is-lowering-why-should-you-care/</guid><description>Nowadays we&amp;rsquo;re all writing highly understandable code (or at least that&amp;rsquo;s what I&amp;rsquo;m telling my coworkers!) in high level languages, almost completely forgetting what those pieces of code are translated to once they are compiled or interpreted.
Back in the day, people used to punch holes into cards to represent bits as instructions for the CPU, then they invented low level languages, then high level languages, and now we even have high level languages that transpile to other high level languages instead of compiling them (think of TypeScript to JavaScript for example).</description></item><item><title>Setup passwordless access via SSH to a remote server</title><link>https://frikyfriky11.github.io/posts/passwordless-access-ssh/</link><pubDate>Sun, 04 Sep 2022 22:55:00 +0200</pubDate><guid>https://frikyfriky11.github.io/posts/passwordless-access-ssh/</guid><description>Managing remote servers is part of my job as a software engineer, and I usually access them via SSH.
One thing that is really annoying is typing your password every single time, and for obvious reason setting an empty password is not a workaround :)
SSH servers usually support key authentication besides password authentication (sometimes it is even the only method of authentication allowed!), and making the server trust your computer is trivially easy to do.</description></item><item><title>About me</title><link>https://frikyfriky11.github.io/about/</link><pubDate>Wed, 31 Aug 2022 21:43:06 +0200</pubDate><guid>https://frikyfriky11.github.io/about/</guid><description>Since I was four years old I have been immersed in the world of information technology.
I started my journey by installing my favorite games and destroying several operating systems (sorry Windows 98, it wasn&amp;rsquo;t your fault!), then I moved on to discover the world of the web, HTML (at the time it wasn&amp;rsquo;t HTML5 yet) and a pinch of JavaScript.
My curiosity then extended to the world of hardware but also virtual machines, creating entire distributed networks in VMs on the home PC and fiddling a little too much with the router.</description></item><item><title>Batch rotating multiple mp4 videos (useful for Instagram Reels)</title><link>https://frikyfriky11.github.io/posts/batch-rotating-mp4-videos-for-reels/</link><pubDate>Wed, 31 Aug 2022 21:43:06 +0200</pubDate><guid>https://frikyfriky11.github.io/posts/batch-rotating-mp4-videos-for-reels/</guid><description>Whenever I have some free time (almost never these days, sigh!), you can find me shooting photos around the city. Usually I like to post the best content of a shooting day on Instagram, and while I am mostly focused on photography, I sometimes like to post some videos as Instagram Reels as well.
Instagram Reels have a 9:16 aspect ratio (1080x1920) while my camera (a Canon EOS R) shoots in 9:16 (1920x1080) and doesn&amp;rsquo;t automatically rotate the videos when I shoot them portrait, unlike the photo mode that does this by default.</description></item></channel></rss>